#include <iostream>
using namespace std;
double calculateQuotient(double a, double d) {
if (d == 0) {
std::cout << "Деление на ноль!" << std::endl;
return 0;
}
else {
return a / d;
}
}
double calculateArea(double side) {
return side * side;
}
double calculateArea(double length, double width) {
return length * width;
}
double calculatePowerIterative(double c, int x) {
if (x < 0) {
std::cout << "Показатель степени должен быть неотрицательным." << std::endl;
return 0;
}
double result = 1.0;
for (int i = 0; i < x; ++i) {
result *= c;
}
return result;
}
double calculatePowerRecursive(double c, int x) {
if (x == 0) {
return 1.0;
}
else if (x > 0) {
return c * calculatePowerRecursive(c, x - 1);
}
else {
return 1 / calculatePowerRecursive(c, -x);
}
}
int main() {
setlocale(LC_ALL, "rus");
double a = 10.0;
double d = 2.0;
double result = calculateQuotient(a, d);
std::cout << "Частное " << a << " / " << d << " = " << result << std::endl;
d = 0.0;
result = calculateQuotient(a, d);
double side = 5.0;
double areaSquare = calculateArea(side);
std::cout << "Площадь квадрата со стороной " << side << " = " << areaSquare << std::endl;
double length = 4.0;
double width = 6.0;
double areaRectangle = calculateArea(length, width);
std::cout << "Площадь прямоугольника с длиной " << length << " и шириной " << width << " = " << areaRectangle << std::endl;
double c = 2.0;
int x = 3;
double resultIterative = calculatePowerIterative(c, x);
std::cout << c << " в степени " << x << " (итеративно) = " << resultIterative << std::endl;
c = 2.0;
x = 3;
double resultRecursive = calculatePowerRecursive(c, x);
std::cout << c << " в степени " << x << " (рекурсивно) = " << resultRecursive << std::endl;
c = 2.0;
x = -3;
resultRecursive = calculatePowerRecursive(c, x);
std::cout << c << " в степени " << x << " (рекурсивно) = " << resultRecursive << std::endl;
return 0;
}
